---
layout:     project
title:      "Osito"
date:       2014-10-30 1:02:02
categories: projects
img:        Osito-1-action.jpg
thumb:      thumb-Osito.jpg
roles:
  - User Experience
  - Mobile UI

---
Osito was a digital personal assistant. The implications of that statement alone are huge. Can we push users information when they need it? If contextual computing is the future of interaction it is a big problem with many nuanced implementaiton problems to be solved. Sounds fun, right?

##How it began

I joined the team as Designer when our product was just taking shape. The app had a rough UI and some branding under a different name. I was tasked with designing the app (experience, ui, visual design), the marketing site, and the new brand.

#### We were still adding “triggers“ and “actions“. -- *Huh?*

Imagine you have a personal assistant and he can read your email. He'd have lots of info about you since you work together 40+ hours of the week. An email from Bob might be a trigger to schedule a meeting if his project is over budget. Or there is a weather event that is going to make you late to your next meeting, you'd expect an assistant to let you know when to leave.

As we added the triggers, we started to uncover how much data the average person truly processes on their mobile device. Juggling emails, chats, receipts, weather, traffic, etc. becomes a large scale operation with just a small number of contact points. We can handle a bunch of that with signals coming from a phone - location (weather & traffic), email (receipts & meeting invites), and calendar (meetings & general scheduling).

##Initial UI Designs

After sketching some UI concepts I started to drive the team toward a card-based interface *(fig. 1)*. It became very clear that each module was independent of the others. Each module needed a distinct hierarchy. To Photoshop!

Osito's text-heavy data needed to present as quick, at-a-glance interactions. Once you start putting disparate data into the mix, you get some long absorption times. We quickly decided to build a grid-based card system with standardized button / action placement and a strict typographical hierarchy.

<figure>
  <img src="{{ site.url }}/img/Osito-2-cards.jpg">
  <figcaption>
    <p><em>(fig. 1)</em> I tried to capture the fun in these interactions with color and layout that skews happy.</p>
  </figcaption>
</figure>

This started to come together over a few weeks in January/February of 2013. We were targeting an April release which made this visual overhaul a bit harrowing. As a result, I happened to jump in the iOS repo and start hacking away on the welcome flow. This was actually the first time I’d opened Xcode - it was a bit daunting, but really fun.

<div class="tall">

  <h2>Lessons Learned</h2>

  <p>Making wide-reaching apps is hard. Who do you test with? What is the target user’s interest in an app like this? Where do we go when we only get general feedback?</p>

  <p>I think that building Osito taught the entire team about focus in the sphere of a product. We lacked it; we tried to design for very broad uses and it burned us. Once the app was released, we got some really great feedback that made us rethink the entirety of what we were building.</p>

  <h4>Half-way to a Pivot</h4>

  <p>We learned that users wanted control - without it they felt adrift in our system. Users had a hard time relying on Osito to get them the data they needed. Users wanted to know *what* was being tracked and that it *was* being tracked at a threshold they thought prudent.</p>

  <p>We developed a stop-gap solution that we called Look-Ahead <em>(fig. 2)</em>. Look-Ahead was essentially a dashboard that kept our users in the loop as to what was next on Osito’s radar. We tried to compartmentalize the triggers and help the user understand what information Osito was looking for.</p>

</div>

<figure class="tall">
  <img src="{{ site.url }}/img/Osito-4-lookahead.gif" width="320">
  <figcaption>
    <p><em>(fig. 2)</em> This is an animated gif that was built to illustrate the concept to the team.</p>
  </figcaption>
</figure>

##Conclusion

Osito was an attempt to simplify interacting with your phone and became an act of reassuring the user that we were paying attention. Osito lacked the feedback loop that users crave. Bolting on a feedback loop ultimately didn’t work. Eventually we did pivot toward our strongest trigger - email. That is a story for a different case study…

##Design Details

While I typically start with wireframes, this project warranted a different approach. Features were sketched on whiteboards and ocassionally some scrap paper. Those were then put through the photoshop wringer immediately. It made for some fast turnarounds, but process is a thing that you need to weigh when moving this fast.

<figure class="details">
  <img src="{{ site.url }}/img/Osito-4-marketing.jpg">
  <figcaption>
    <p><em>(fig. 3)</em> Appstore Feature: Fun stuff around the brand.</p>
  </figcaption>
</figure>

<figure class="details">
  <img src="{{ site.url }}/img/Osito-5-wires.jpg">
  <figcaption>
    <p><em>(fig. 4)</em> The first project I worked on was an attempt to wire frame the details we needed for each card. I started in grayscale as "wires". Clearly no one would think that we'd be using Tungsten in a native app.</p>
  </figcaption>
</figure>

<figure class="details">
  <img src="{{ site.url }}/img/Osito-6-welcome.jpg">
  <figcaption>
    <p><em>(fig. 5)</em> The earliest welcome flow, in fact you can see the original branding. This design was a result of our first whiteboard session with the whole team.</p>
  </figcaption>
</figure>

<figure class="details">
  <img src="{{ site.url }}/img/Osito-8-flight-day-before.jpg">
  <figcaption>
    <p><em>(fig. 6)</em> Prompting users the day before an event was a huge part of the experience. Presenting actions that were simple to execute.</p>
  </figcaption>
</figure>

<figure class="details last">
  <img src="{{ site.url }}/img/Osito-7-action.jpg">
  <figcaption>
    <p><em>(fig. 7)</em> Push notification were one of the major interfaces for the app. The team kept a running spreadshet with new phrases to try to capture the spirit of Osito.</p>
  </figcaption>
</figure>

##Website: Design/Build

I went looking for comps of the site and I can't find any; I think this was completely designed in the browser with the exception of the graphic assets. The site was featured on a few inspiration sites as an example of "well executed minimal design".

This was the first time I used Jekyll + SASS. Our iOS engineer was a big fan of the Jekyll. I had heard of SASS before, but the combo really is amazing. They are still a big part of my workflow for web projects.

<figure class="details">
  <img src="{{ site.url }}/img/Osito-9-website.jpg">
  <figcaption>
    <p><em>(fig. 8)</em> Simple layout, strong call to action</p>
  </figcaption>
</figure>

<figure class="details">
  <img src="{{ site.url }}/img/Osito-10-website.jpg">
  <figcaption>
    <p><em>(fig. 9)</em> This slider was awesome for explaining the cards and the underlying tech.</p>
  </figcaption>
</figure>
